const Client = require('./services/models/clientModel');
const Product = require('./services/models/productModel');
const Cart = require('./services/models/cartModel');
const CartDetails = require('./services/models/cartDetailsModel');
const bodyParser = require('body-parser');
const express = require("express");
const { generateUsers, generateProducts } = require("./services/db/faker");

const app = express();
app.use(bodyParser.json());

const generatedUsers = generateUsers(0);
generatedUsers.forEach(async (user) => {
    let client = await Client.createClient(user);
    console.log(client);
});

const generatedProducts = generateProducts(0);
generatedProducts.forEach(async (fakeProduct) => {
    let product = await Product.createProduct(fakeProduct);
    console.log(product);
});

// API POUR CART

app.get("/carts", async (req, res) => {
    let carts = await Cart.getAll();
    res.send(carts);
});

app.post("/postCart", async (req, res) => {
    let cart = await Cart.createCart(req.body.date, req.body.client_id);
    res.send(cart);
});

app.get("/cart/:id", async (req, res) => {
    let cart = await Cart.getCartById(req.params.id);
    res.send(cart);
});

app.put("/cart/:id", async (req, res) => {
    let cart = await Cart.updateCartById(
        req.params.id,
        req.body.date,
        req.body.client_id
    );
    res.send(cart);
});

// API POUR CARTDETAILS

app.get("/cartDetails", async (req, res) => {
    let cartDetails = await CartDetails.getAll();
    res.send(cartDetails);
});

app.post("/postCartDetails", async (req, res) => {
    let cartDetails = await CartDetails.createCartDetails(
        req.body.cart_id,
        req.body.product_id,
        req.body.quantity
    );
    res.send(cartDetails);
});

app.get("/cartDetails/:id", async (req, res) => {
    let cartDetails = await CartDetails.getCartDetailsById(req.params.id);
    res.send(cartDetails);
});

app.put("/cartDetails/:id", async (req, res) => {
    let cartDetails = await CartDetails.updateCartDetailsById(  
        req.params.id,
        req.body.cart_id,
        req.body.product_id,
        req.body.quantity
    );
    res.send(cartDetails);
});
 
// API POUR CLIENT

app.get("/clients", async (req, res) => {
    let clients = await Client.getAll();
    res.send(clients);
});

app.post("/postClient", async (req, res) => {
    try {
        let client = await Client.createClient(req.body);
        res.send(client);
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
});

app.get("/client/:id", async (req, res) => {
    let client = await Client.getClientById(req.params.id);
    res.send(client);
});

app.put("/client/:id", async (req, res) => {
    let client = await Client.updateClientById(
        req.params.id,
        req.body.first_name,
        req.body.last_name,
        req.body.email,
        req.body.address
    );
    res.send(client);
});

// API POUR PRODUCT

app.get("/products", async (req, res) => {
    let product = await Product.getAll();
    res.send(product);
});

app.post("/postProduct", async (req, res) => {
    let product = await Product.createProduct(
        req.body.label,
        req.body.description,
        req.body.price,
        req.body.stock_quantity
    );
    res.send(product);
});

app.get("/product/:id", async (req, res) => {
    let product = await Product.getProductById(req.params.id);
    res.send(product);
});

app.put("/product/:id", async (req, res) => {
    let product = await Product.updateProductById(
        req.params.id,
        req.body.label,
        req.body.description,
        req.body.price,
        req.body.stock_quantity
    );
    res.send(product);
});

app.listen(3000, () => {
    console.log("Server running on port http://localhost:3000");
}
);
